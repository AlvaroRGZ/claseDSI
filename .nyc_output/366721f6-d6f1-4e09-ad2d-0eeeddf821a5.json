{"/home/usuario/repo7/src/AlgoritmoBase/Algoritmo.ts":{"path":"/home/usuario/repo7/src/AlgoritmoBase/Algoritmo.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":14,"column":8},"end":{"line":14,"column":19}},"3":{"start":{"line":15,"column":8},"end":{"line":15,"column":33}},"4":{"start":{"line":22,"column":8},"end":{"line":22,"column":26}},"5":{"start":{"line":28,"column":8},"end":{"line":28,"column":29}},"6":{"start":{"line":31,"column":0},"end":{"line":31,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":29},"end":{"line":16,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":19},"end":{"line":23,"column":5}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":18},"end":{"line":29,"column":5}},"line":27}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{"0":1,"1":1,"2":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/repo7/src/AlgoritmoBase/Algoritmo.ts","sources":["/home/usuario/repo7/src/AlgoritmoBase/Algoritmo.ts"],"names":[],"mappings":";;;AACA,oDAAoD;AACpD;;GAEG;AACH,MAAa,SAAS;IACpB;;;OAGG;IACH,YAAoB,CAAW,EAAU,QAAkB;QAAvC,MAAC,GAAD,CAAC,CAAU;QAAU,aAAQ,GAAR,QAAQ,CAAU;IAAG,CAAC;IAE/D;;;OAGG;IACH,WAAW,CAAC,CAAW;QACrB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IACpB,CAAC;IACD;;OAEG;IACH,WAAW;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;CACF;AApBD,8BAoBC","sourcesContent":["import {Strategy} from '../Algoritmos/interface';\n// import {Mergesort} from '../Algoritmos/mergesort'\n/**\n * Clase algoritmo\n */\nexport class Algoritmo {\n  /**\n   * @param v vector a ordenas\n   * @param strategy algoritmo para ordenar\n   */\n  constructor(private v: number[], private strategy: Strategy) {}\n\n  /**\n   * Asigns a new strategy\n   * @param a new strategy\n   */\n  setStrategy(a: Strategy) {\n    this.strategy = a;\n  }\n  /**\n   * @return actual strategy\n   */\n  getStrategy(): Strategy {\n    return this.strategy;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b0c8ae4c0f632cf9c85b5f8dbfec8c693fc592bb","contentHash":"63b3b256d11145d870e3f1db8a65d8b971a550919b615bb9a50c3cf32f4720f9"},"/home/usuario/repo7/src/Algoritmos/mergesort.ts":{"path":"/home/usuario/repo7/src/Algoritmos/mergesort.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":13,"column":8},"end":{"line":13,"column":17}},"3":{"start":{"line":16,"column":0},"end":{"line":16,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":15},"end":{"line":14,"column":5}},"line":12}},"branchMap":{},"s":{"0":1,"1":1,"2":0,"3":1},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/repo7/src/Algoritmos/mergesort.ts","sources":["/home/usuario/repo7/src/Algoritmos/mergesort.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,SAAS;IACpB;;;OAGG;IACH,OAAO,CAAC,CAAW;QACjB,OAAO,CAAC,CAAC;IACX,CAAC;CACF;AARD,8BAQC","sourcesContent":["import {Strategy} from './interface';\n\n/**\n * Clase mergesort para ordenar vectores\n */\nexport class Mergesort implements Strategy {\n  /**\n   * @param v vector a ordenar\n   * @returns vector ordenado por mergesort\n   */\n  ordenar(v: number[]): number[] {\n    return v;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"da5330d2bb8bc62d0c3f1c51a1017a15a50cc97e","contentHash":"613170803a0c8cb7d5cc66b93f6d733b80baab56fb6a2154bd81c8864c26ed02"},"/home/usuario/repo7/src/Algoritmos/bubblesort.ts":{"path":"/home/usuario/repo7/src/Algoritmos/bubblesort.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":13,"column":8},"end":{"line":13,"column":17}},"3":{"start":{"line":16,"column":0},"end":{"line":16,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":15},"end":{"line":14,"column":5}},"line":12}},"branchMap":{},"s":{"0":1,"1":1,"2":0,"3":1},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/repo7/src/Algoritmos/bubblesort.ts","sources":["/home/usuario/repo7/src/Algoritmos/bubblesort.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,UAAU;IACrB;;;OAGG;IACH,OAAO,CAAC,CAAW;QACjB,OAAO,CAAC,CAAC;IACX,CAAC;CACF;AARD,gCAQC","sourcesContent":["import {Strategy} from './interface';\n\n/**\n * Clase mergesort para ordenar vectores\n */\nexport class Bubblesort implements Strategy {\n  /**\n   * @param v vector a ordenar\n   * @returns vector ordenado por mergesort\n   */\n  ordenar(v: number[]): number[] {\n    return v;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d7b3ff8234f16696935215c201bbedb30ffa0e18","contentHash":"0f90d0ff8e39dec5e875e8652ecedabad63fe41361fe6ef65d7e5fed679bb287"}}