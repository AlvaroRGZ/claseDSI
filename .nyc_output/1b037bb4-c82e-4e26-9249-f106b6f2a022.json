{"/home/usuario/repo7/src/AlgoritmoBase/Algoritmo.ts":{"path":"/home/usuario/repo7/src/AlgoritmoBase/Algoritmo.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":14,"column":8},"end":{"line":14,"column":19}},"3":{"start":{"line":15,"column":8},"end":{"line":15,"column":33}},"4":{"start":{"line":22,"column":8},"end":{"line":22,"column":26}},"5":{"start":{"line":28,"column":8},"end":{"line":28,"column":29}},"6":{"start":{"line":34,"column":8},"end":{"line":34,"column":45}},"7":{"start":{"line":37,"column":0},"end":{"line":37,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":29},"end":{"line":16,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":19},"end":{"line":23,"column":5}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":18},"end":{"line":29,"column":5}},"line":27},"3":{"name":"(anonymous_3)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":15},"end":{"line":35,"column":5}},"line":33}},"branchMap":{},"s":{"0":1,"1":1,"2":2,"3":2,"4":1,"5":1,"6":2,"7":1},"f":{"0":2,"1":1,"2":1,"3":2},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/repo7/src/AlgoritmoBase/Algoritmo.ts","sources":["/home/usuario/repo7/src/AlgoritmoBase/Algoritmo.ts"],"names":[],"mappings":";;;AACA,oDAAoD;AACpD;;GAEG;AACH,MAAa,SAAS;IACpB;;;OAGG;IACH,YAAoB,CAAW,EAAU,QAAkB;QAAvC,MAAC,GAAD,CAAC,CAAU;QAAU,aAAQ,GAAR,QAAQ,CAAU;IAAG,CAAC;IAE/D;;;OAGG;IACH,WAAW,CAAC,CAAW;QACrB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IACpB,CAAC;IACD;;OAEG;IACH,WAAW;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IACD;;OAEG;IACH,QAAQ;QACN,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC;CACF;AA1BD,8BA0BC","sourcesContent":["import {Strategy} from '../Algoritmos/interface';\n// import {Mergesort} from '../Algoritmos/mergesort'\n/**\n * Clase algoritmo\n */\nexport class Algoritmo {\n  /**\n   * @param v vector a ordenas\n   * @param strategy algoritmo para ordenar\n   */\n  constructor(private v: number[], private strategy: Strategy) {}\n\n  /**\n   * Asigns a new strategy\n   * @param a new strategy\n   */\n  setStrategy(a: Strategy) {\n    this.strategy = a;\n  }\n  /**\n   * @return actual strategy\n   */\n  getStrategy(): Strategy {\n    return this.strategy;\n  }\n  /**\n   * Ordena el vector\n   */\n  ejecutar(): number[] {\n    return this.strategy.ordenar(this.v);\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3d395afc690f8f58c6bc756391ccc60c2890df9e","contentHash":"6d57ca2f2162b46fbe9f446da795e252d20740191933e5291e95502a6a17cb3f"},"/home/usuario/repo7/src/Algoritmos/mergesort.ts":{"path":"/home/usuario/repo7/src/Algoritmos/mergesort.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":13,"column":8},"end":{"line":13,"column":30}},"3":{"start":{"line":20,"column":27},"end":{"line":20,"column":54}},"4":{"start":{"line":21,"column":18},"end":{"line":21,"column":44}},"5":{"start":{"line":22,"column":19},"end":{"line":22,"column":42}},"6":{"start":{"line":23,"column":8},"end":{"line":26,"column":9}},"7":{"start":{"line":24,"column":12},"end":{"line":24,"column":35}},"8":{"start":{"line":25,"column":12},"end":{"line":25,"column":37}},"9":{"start":{"line":27,"column":8},"end":{"line":27,"column":37}},"10":{"start":{"line":35,"column":23},"end":{"line":35,"column":24}},"11":{"start":{"line":36,"column":24},"end":{"line":36,"column":25}},"12":{"start":{"line":37,"column":26},"end":{"line":37,"column":36}},"13":{"start":{"line":38,"column":27},"end":{"line":38,"column":38}},"14":{"start":{"line":39,"column":25},"end":{"line":39,"column":27}},"15":{"start":{"line":40,"column":8},"end":{"line":65,"column":9}},"16":{"start":{"line":41,"column":28},"end":{"line":41,"column":41}},"17":{"start":{"line":42,"column":29},"end":{"line":42,"column":44}},"18":{"start":{"line":43,"column":12},"end":{"line":64,"column":13}},"19":{"start":{"line":44,"column":16},"end":{"line":57,"column":17}},"20":{"start":{"line":45,"column":20},"end":{"line":45,"column":43}},"21":{"start":{"line":46,"column":20},"end":{"line":46,"column":31}},"22":{"start":{"line":49,"column":20},"end":{"line":56,"column":21}},"23":{"start":{"line":50,"column":24},"end":{"line":50,"column":47}},"24":{"start":{"line":51,"column":24},"end":{"line":51,"column":35}},"25":{"start":{"line":54,"column":24},"end":{"line":54,"column":48}},"26":{"start":{"line":55,"column":24},"end":{"line":55,"column":36}},"27":{"start":{"line":60,"column":16},"end":{"line":63,"column":17}},"28":{"start":{"line":61,"column":20},"end":{"line":61,"column":44}},"29":{"start":{"line":62,"column":20},"end":{"line":62,"column":32}},"30":{"start":{"line":66,"column":8},"end":{"line":66,"column":24}},"31":{"start":{"line":69,"column":0},"end":{"line":69,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":15},"end":{"line":14,"column":5}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":18},"end":{"line":28,"column":5}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":21},"end":{"line":67,"column":5}},"line":34}},"branchMap":{"0":{"loc":{"start":{"line":23,"column":8},"end":{"line":26,"column":9}},"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":26,"column":9}},{"start":{"line":23,"column":8},"end":{"line":26,"column":9}}],"line":23},"1":{"loc":{"start":{"line":40,"column":15},"end":{"line":40,"column":61}},"type":"binary-expr","locations":[{"start":{"line":40,"column":15},"end":{"line":40,"column":35}},{"start":{"line":40,"column":39},"end":{"line":40,"column":61}}],"line":40},"2":{"loc":{"start":{"line":43,"column":12},"end":{"line":64,"column":13}},"type":"if","locations":[{"start":{"line":43,"column":12},"end":{"line":64,"column":13}},{"start":{"line":43,"column":12},"end":{"line":64,"column":13}}],"line":43},"3":{"loc":{"start":{"line":44,"column":16},"end":{"line":57,"column":17}},"type":"if","locations":[{"start":{"line":44,"column":16},"end":{"line":57,"column":17}},{"start":{"line":44,"column":16},"end":{"line":57,"column":17}}],"line":44},"4":{"loc":{"start":{"line":49,"column":20},"end":{"line":56,"column":21}},"type":"if","locations":[{"start":{"line":49,"column":20},"end":{"line":56,"column":21}},{"start":{"line":49,"column":20},"end":{"line":56,"column":21}}],"line":49},"5":{"loc":{"start":{"line":60,"column":16},"end":{"line":63,"column":17}},"type":"if","locations":[{"start":{"line":60,"column":16},"end":{"line":63,"column":17}},{"start":{"line":60,"column":16},"end":{"line":63,"column":17}}],"line":60}},"s":{"0":1,"1":1,"2":1,"3":7,"4":7,"5":7,"6":7,"7":3,"8":3,"9":7,"10":7,"11":7,"12":7,"13":7,"14":7,"15":7,"16":18,"17":18,"18":18,"19":17,"20":8,"21":8,"22":9,"23":3,"24":3,"25":6,"26":6,"27":1,"28":1,"29":1,"30":7,"31":1},"f":{"0":1,"1":7,"2":7},"b":{"0":[3,4],"1":[25,8],"2":[17,1],"3":[8,9],"4":[3,6],"5":[1,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/repo7/src/Algoritmos/mergesort.ts","sources":["/home/usuario/repo7/src/Algoritmos/mergesort.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,SAAS;IACpB;;;OAGG;IACH,OAAO,CAAC,CAAW;QACjB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC;IACD;;;OAGG;IACH,MAAM,CAAC,KAAe;QACpB,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC/C,IAAI,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;QACrC,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QACnC,IAAI,UAAU,GAAG,CAAC,EAAE;YAClB,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACvB,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC1B;QACD,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED;;;;OAIG;IACH,KAAK,CAAC,GAAa,EAAE,IAAc;QACjC,IAAI,QAAQ,GAAG,CAAC,CAAC;QACjB,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC;QAC7B,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;QAC/B,MAAM,QAAQ,GAAG,EAAE,CAAC;QACpB,OAAO,QAAQ,GAAG,SAAS,IAAI,SAAS,GAAG,UAAU,EAAE;YACrD,MAAM,OAAO,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC9B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;YACjC,IAAI,OAAO,KAAK,SAAS,EAAE;gBACzB,IAAI,QAAQ,KAAK,SAAS,EAAE;oBAC1B,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACvB,QAAQ,EAAE,CAAC;iBACZ;qBAAM;oBACL,IAAI,OAAO,IAAI,QAAQ,EAAE;wBACvB,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACvB,QAAQ,EAAE,CAAC;qBACZ;yBAAM;wBACL,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;wBACxB,SAAS,EAAE,CAAC;qBACb;iBACF;aACF;iBAAM;gBACL,IAAI,QAAQ,KAAK,SAAS,EAAE;oBAC1B,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACxB,SAAS,EAAE,CAAC;iBACb;aACF;SACF;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;CACF;AA3DD,8BA2DC","sourcesContent":["import {Strategy} from './interface';\n\n/**\n * Clase mergesort para ordenar vectores\n */\nexport class Mergesort implements Strategy {\n  /**\n   * @param v vector a ordenar\n   * @returns vector ordenado por mergesort\n   */\n  ordenar(v: number[]): number[] {\n    return this.divide(v);\n  }\n  /**\n   * @param v vector a ordenar\n   * @returns vector ordenado por mergesort\n   */\n  divide(items: number[]): number[] {\n    const halfLength = Math.ceil(items.length / 2);\n    let low = items.slice(0, halfLength);\n    let high = items.slice(halfLength);\n    if (halfLength > 1) {\n      low = this.divide(low);\n      high = this.divide(high);\n    }\n    return this.merge(low, high);\n  }\n\n  /**\n   * @param l limite izquierdo\n   * @param r limite derecho\n   * @returns vector ordenado\n   */\n  merge(low: number[], high: number[]): number[] {\n    let indexLow = 0;\n    let indexHigh = 0;\n    const lengthLow = low.length;\n    const lengthHigh = high.length;\n    const combined = [];\n    while (indexLow < lengthLow || indexHigh < lengthHigh) {\n      const lowItem = low[indexLow];\n      const highItem = high[indexHigh];\n      if (lowItem !== undefined) {\n        if (highItem === undefined) {\n          combined.push(lowItem);\n          indexLow++;\n        } else {\n          if (lowItem <= highItem) {\n            combined.push(lowItem);\n            indexLow++;\n          } else {\n            combined.push(highItem);\n            indexHigh++;\n          }\n        }\n      } else {\n        if (highItem !== undefined) {\n          combined.push(highItem);\n          indexHigh++;\n        }\n      }\n    }\n    return combined;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"107169adfd511f71dcf487c4510a319208306cbf","contentHash":"15d339a60dde3bc738a540118dd9bbdd3038ed9386ef774f79acc1e3efdbdd0b"},"/home/usuario/repo7/src/Algoritmos/bubblesort.ts":{"path":"/home/usuario/repo7/src/Algoritmos/bubblesort.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":13,"column":8},"end":{"line":13,"column":22}},"3":{"start":{"line":14,"column":8},"end":{"line":22,"column":9}},"4":{"start":{"line":14,"column":21},"end":{"line":14,"column":22}},"5":{"start":{"line":15,"column":12},"end":{"line":21,"column":13}},"6":{"start":{"line":15,"column":25},"end":{"line":15,"column":26}},"7":{"start":{"line":16,"column":16},"end":{"line":20,"column":17}},"8":{"start":{"line":17,"column":33},"end":{"line":17,"column":37}},"9":{"start":{"line":18,"column":20},"end":{"line":18,"column":36}},"10":{"start":{"line":19,"column":20},"end":{"line":19,"column":36}},"11":{"start":{"line":23,"column":8},"end":{"line":23,"column":17}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":15},"end":{"line":24,"column":5}},"line":12}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":16},"end":{"line":20,"column":17}},"type":"if","locations":[{"start":{"line":16,"column":16},"end":{"line":20,"column":17}},{"start":{"line":16,"column":16},"end":{"line":20,"column":17}}],"line":16}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":6,"6":6,"7":30,"8":11,"9":11,"10":11,"11":1,"12":1},"f":{"0":1},"b":{"0":[11,19]},"inputSourceMap":{"version":3,"file":"/home/usuario/repo7/src/Algoritmos/bubblesort.ts","sources":["/home/usuario/repo7/src/Algoritmos/bubblesort.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,UAAU;IACrB;;;OAGG;IACH,OAAO,CAAC,CAAW;QACjB,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,0BAA0B;QAEzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACrC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;oBACnB,MAAM,IAAI,GAAW,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC1B,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBAChB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;iBACjB;aACF;SACF;QACD,OAAO,CAAC,CAAC;IACX,CAAC;CACF;AAnBD,gCAmBC","sourcesContent":["import {Strategy} from './interface';\n\n/**\n * Clase mergesort para ordenar vectores\n */\nexport class Bubblesort implements Strategy {\n  /**\n   * @param v vector a ordenar\n   * @returns vector ordenado por mergesort\n   */\n  ordenar(v: number[]): number[] {\n    v = v.slice(); // creates a copy of the v\n\n    for (let i = 0; i < v.length; i++) {\n      for (let j = 0; j < v.length - 1; j++) {\n        if (v[j] > v[j + 1]) {\n          const swap: number = v[j];\n          v[j] = v[j + 1];\n          v[j + 1] = swap;\n        }\n      }\n    }\n    return v;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4c23f4aa6dedb52057807484ffda53fd684951b9","contentHash":"bc4ecd7b91b7f29c3452dc6133dc84143e9f62d1151389b6b4d33fb89f887196"}}